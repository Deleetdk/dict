% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dict.r
\name{dict}
\alias{default_dict}
\alias{dict}
\alias{strict_dict}
\title{Creates a new dictionary}
\usage{
dict(...)

default_dict(..., .default = NULL)

strict_dict(...)
}
\arguments{
\item{...}{key and value pairs. All arguments must be named.}

\item{default}{a default value to be returned when a non-existing key is accessed.}
}
\value{
a new dictionary object.
}
\description{
Creates a new dictionary
}
\details{
These functions are used to build a new dictionary object filled with the key = value pairs
passed as arguments. Typical dictionary objects are created using \code{dict}.

Dictionary objects are equivalent to named lists, but have a few advantages over them.

Firstly, all values contained in dictionary objects are associated with a unique character key.
This means that values can only be accessed using their respective keys, and not using
integer indices, which is more consistent with the intended usage. It is also not possible
to have empty or repeated keys.

Secondly, keys are never partially matched; for instance, \code{my_dict$k} will not match
\code{my_dict$key} but will instead return \code{NULL}.

Dictionary object can store \code{NULL}s as values; assigning \code{NULL} to a key will
not delete that key from the dictionary, but set the value associated with that key to \code{NULL}.
To remove a key, use the \link{omit} function.

Finally, printing of dicts is more compact that printing named lists.

Dictionaries are implemented using named lists, so they can be passed to functions that
expect lists.

\code{default_dict} creates a dictionary with default values. When the user accesses a
non-existing key, the default value will be returned instead of \code{NULL}.

\code{strict_dict} also creates a dictionary. When the user accesses a non-existing key,
an exception will be raised instead of returning \code{NULL}.
}
\examples{
person <- dict(name = "Joan", last_name = "Smith", age = 30)
salaries <- default_dict(employee_A = 100, employee_B = 50,
                         employee_C = 75, default = 60)
enumeration <- strict_dict(YES = 1, NO = 0)
}

